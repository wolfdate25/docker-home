services:
  app:
    build: .
    restart: always
    container_name: nextcloud
    # security_opt:
    #   - no-new-privileges:true
    # cap_drop:
    #   - ALL
    group_add:
      - 2000
    volumes:
      - ${DATA_PATH}/main:/var/www/html
      - ${MEDIA_PATH}:/media
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - TRUSTED_PROXIES=172.23.0.0/16
      - OVERWRITEHOST=${NEXTCLOUD_DOMAIN}
      - OVERWRITEPROTOCL=https
      - OVERWRITECLIURL=https://${NEXTCLOUD_DOMAIN}
      - DEFAULT_PHONE_REGION=KR
    env_file:
      - db.env
    networks:
      - backend
      - db
    depends_on:
      - db
      - redis

  web:
    image: nginx:1.23.4-alpine
    restart: always
    container_name: nextcloud-web
    volumes:
      - ${DATA_PATH}/main:/var/www/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - proxy
      - backend
    depends_on:
      - app
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_DOMAIN}`)"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=leresolver"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-regex"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=9999"
      # - "traefik.http.middlewares.nextcloud-buffering.buffering.memRequestBodyBytes=10477568"
      # - "traefik.http.middlewares.nextcloud-buffering.buffering.memResponseBodyBytes=10477568"
      - "traefik.http.middlewares.nextcloud-regex.redirectRegex.permanent=true"
      - "traefik.http.middlewares.nextcloud-regex.redirectRegex.regex=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nextcloud-regex.redirectRegex.replacement=https://$$1/remote.php/dav/"

  cron:
    build: .
    restart: always
    container_name: nextcloud-cron
    volumes:
      - ${DATA_PATH}/main:/var/www/html
    entrypoint: /cron.sh
    networks:
      - backend
      - db
    depends_on:
      - redis
      - db

  db:
    image: postgres:15-alpine
    restart: always
    container_name: nextcloud-postgres
    volumes:
      - "${DATA_PATH}/db:/var/lib/postgresql/data"
    env_file:
      - db.env
    networks:
      - db

  redis:
    image: redis:7-alpine
    restart: always
    container_name: nextcloud-redis
    networks:
      - db

networks:
  backend:
    external: false
  db:
    external: false
  proxy:
    external: true
